// function hey(){
    
// // //   // Basic validation function
// // //   const validate = () => {
// // //     let validationErrors = {};

// // //     // Username validation
// // //     if (!username.trim()) {
// // //       validationErrors.username = "Username is required";
// // //     } else if (!/^[\w@._]+$/.test(username)) {
// // //       validationErrors.username = "Username can only contain letters, numbers, @, and _";
// // //     } else if (/\s/.test(username)) {
// // //       validationErrors.username = "Don't use spaces. Use @ and _ instead.";
// // //     }   else if (!username.includes('@') && !username.includes('_')) {
// // //       validationErrors.username = "Username must contain at least one @ or _ character.";
// // //     }

// // //     // Name validation
// // //     if (!name.trim()) {
// // //       validationErrors.name = "Name is required";
// // //     } else if (name.length < 3) {
// // //       validationErrors.name = "Name must be at least 3 characters";
// // //     } else if (!/^[A-Za-z]+(?: [A-Za-z]+)?$/.test(name)) {
// // //       validationErrors.name = "Name can only contain letters and one space between words";
// // //     }

// // //     // Email validation
// // //     if (!email.trim()) {
// // //       validationErrors.email = "Email is required";
// // //     } else if (!/\S+@\S+\.\S+/.test(email)) {
// // //       validationErrors.email = "Email is invalid";
// // //     }

// // //     // Gender validation
// // //     if (!gender) validationErrors.gender = "Gender is required";

// // //     // Date of Birth validation
// // //     if (!dob) validationErrors.dob = "Date of birth is required";

// // //     // Phone validation
// // //     if (!phone.trim()) {
// // //       validationErrors.phone = "Phone number is required";
// // //     } else if (!/^\+?1?\d{9,15}$/.test(phone)) {
// // //       validationErrors.phone = "Phone number should be 10 digits";
// // //     }

// // //     // Country validation
// // //     if (!country.trim()) validationErrors.country = "Country is required";

// // //     // City validation
// // //     if (!city.trim()) validationErrors.city = "City is required";

// // //     // State validation
// // //     if (!state.trim()) validationErrors.state = "State is required";

// // //     // Password validation
// // //     if (!password.trim()) {
// // //       validationErrors.password = "Password is required";
// // //     } else if (password.length < 6) {
// // //       validationErrors.password = "Password must be at least 6 characters";
// // //     } else if (!/[0-9]/.test(password)) {
// // //       validationErrors.password = "Password must contain at least one number";
// // //     } else if (!/[A-Z]/.test(password)) {
// // //       validationErrors.password = "Password must contain at least one uppercase letter";
// // //     }

// // //     return validationErrors;
// // //   };

// // //   // Handle form submission
// // //   const FormHandle = (e) => {
// // //     e.preventDefault();
// // //     const validationErrors = validate();
// // //     if (Object.keys(validationErrors).length > 0) {
// // //       setErrors(validationErrors);
// // //       return;
// // //     }




// // // //   {/* Travel Preference */}
// // //           {/* <div className="flex flex-col">
// // //             <label>Travel Preference</label>
// // //             <select
// // //               value={travelPreference}
// // //               onChange={(e) => setTravelPreference(e.target.value)}
// // //               className="w-full h-9 pl-2 text-black outline-none rounded"
// // //             >
// // //               <option value="">Select Travel Preference</option>
// // //               <option value="Domestic">Domestic</option>
// // //               <option value="International">International</option>
// // //               <option value="Both">Both</option>
// // //             </select>
// // //           </div> */}

// // //           {/* Language */}
// // //           {/* <div className="flex flex-col">
// // //             <label>Language</label>
// // //             <select
// // //               value={language}
// // //               onChange={(e) => setLanguage(e.target.value)}
// // //               className="w-full h-9 pl-2 text-black outline-none rounded"
// // //             >
// // //               <option value="">Select Language</option>
// // //               <option value="English">English</option>
// // //               <option value="Hindi">Hindi</option>
// // //               <option value="French">French</option>
// // //               <option value="German">German</option>
// // //             </select>
// // //           </div> */}

// // //           {/* Bio (Covering all areas) */}
// // //           <div className="flex flex-col col-span-3">
// // //             <label>Bio</label>
// // //             <textarea
// // //               value={bio}
// // //               onChange={(e) => setBio(e.target.value)}
// // //               className="w-full h-24 pl-2 py-1 text-black outline-none rounded"
// // //             />
// // //           </div>


// // {/* <div className="flex items-center justify-center w-screen h-screen bg-cover">
// // <img className="absolute z-0 w-screen h-screen " src='./public/one.webp' alt="" />

// // {/* Reduced the height of this div */}
// // <div className="relative z-1 w-full md:w-3/4 lg:w-2/3 bg-stone-300 bg-opacity-80 px-10 py-3 rounded">
// //   <div className="py-1">
// //     <h1 className="text-center text-2xl font-bold">Sign-Up</h1>
// //   </div>

// //   <form onSubmit={FormHandle} className="grid grid-cols-1 md:grid-cols-2 gap-3 gap-x-14">
// //     {/* First Column */}
// //     <div className="flex flex-col">
// //       <label>Username</label>
// //       <input
// //         type="text"
// //         value={username}
// //         onChange={(e) => setUsername(e.target.value)}
// //         className="w-full h-9 pl-2 text-black outline-none rounded"
// //       />
// //       {errors.username && <span className="text-red-500">{errors.username}</span>}
// //     </div>

// //     <div className="flex flex-col">
// //       <label>Name</label>
// //       <input
// //         type="text"
// //         value={name}
// //         onChange={(e) => setName(e.target.value)}
// //         className="w-full h-9 pl-2 text-black outline-none rounded"
// //       />
// //       {errors.name && <span className="text-red-500">{errors.name}</span>}
// //     </div>

// //     <div className="flex flex-col">
// //       <label>Email</label>
// //       <input
// //         type="email"
// //         value={email}
// //         onChange={(e) => setEmail(e.target.value)}
// //         className="w-full h-9 pl-2 text-black outline-none rounded"
// //       />
// //       {errors.email && <span className="text-red-500">{errors.email}</span>}
// //     </div>

// //     <div className="flex flex-col">
// //       <label>Gender</label>
// //       <select
// //         value={gender}
// //         onChange={(e) => setGender(e.target.value)}
// //         className="w-full h-9 pl-2 text-black outline-none rounded"
// //       >
// //         <option value="">Select Gender</option>
// //         <option value="Male">Male</option>
// //         <option value="Female">Female</option>
// //         <option value="other">other</option>
// //       </select>
// //       {errors.gender && <span className="text-red-500">{errors.gender}</span>}
// //     </div>

// //     <div className="flex flex-col">
// //       <label>Date Of Birth</label>
// //       <input
// //         type="date"
// //         value={date_of_birth}
// //         onChange={(e) => setdate_of_birth(e.target.value)}
// //         className="w-full h-9 pl-2 text-black outline-none rounded"
// //         max={today} // Set max attribute to today's date
// //       />
// //       {errors.dob && <span className="text-red-500">{errors.dob}</span>}
// //     </div>

// //     <div className="flex flex-col">
// //       <label>Phone_number </label>
// //       <input
// //         type="text"
// //         value={phone_number}
// //         onChange={(e) => setPhone_number(e.target.value)}
// //         className="w-full h-9 pl-2 text-black outline-none rounded"
// //       />
// //       {errors.phone && <span className="text-red-500">{errors.phone}</span>}
// //     </div>

// //     {/* Second Column */}
// //     <div className="flex flex-col">
// //       <label>Country</label>
// //       <select
// //         value={country}
// //         onChange={(e) => setCountry(e.target.value)}
// //         className="w-full h-9 pl-2 text-black outline-none rounded"
// //       >
// //         <option value="">Select Country</option>
// //         {countries.map((country) => (
// //           <option key={country.isoCode} value={country.isoCode}>
// //             {country.name}
// //           </option>
// //         ))}
// //       </select>
// //       {errors.country && <span className="text-red-500">{errors.country}</span>}
// //     </div>

// //     <div className="flex flex-col">
// //       <label>State</label>
// //       <select
// //         value={state}
// //         onChange={(e) => setState(e.target.value)}
// //         className="w-full h-9 pl-2 text-black outline-none rounded"
// //         disabled={!country} // Disable until a country is selected
// //       >
// //         <option value="">Select State</option>
// //         {states.map((state) => (
// //           <option key={state.isoCode} value={state.isoCode}>
// //             {state.name}
// //           </option>
// //         ))}
// //       </select>
// //       {errors.state && <span className="text-red-500">{errors.state}</span>}
// //     </div>

// //     <div className="flex flex-col">
// //       <label>City</label>
// //       <select
// //         value={city}

// //         onChange={(e) => setCity(e.target.value)}

// //         className="w-full h-9 pl-2 text-black outline-none rounded"
// //         disabled={!state} // Disable until a state is selected
// //       >
// //         <option value="">Select City</option>
// //         {cities.map((city) => (
// //           <option key={city.id} value={city.name}>
// //             {city.name}
// //           </option>
// //         ))}
// //       </select>
// //       {errors.city && <span className="text-red-500">{errors.city}</span>}
// //     </div>

// //     <div className="flex flex-col">
// //       <label>Password</label>
// //       <input
// //         type="password"
// //         value={password}
// //         onChange={(e) => setPassword(e.target.value)}
// //         className="w-full h-9 pl-2 text-black outline-none rounded"
// //       />
// //       {errors.password && <span className="text-red-500">{errors.password}</span>}
// //     </div>

    

    


// //     <div className="col-span-2 flex  items-center justify-center w-full  mt-6">
// //       <button
// //         type="submit"
// //         className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition duration-200"
// //       >
// //         Sign Up
// //       </button>
// //     </div>
// //   </form>

// //   <div className=" w-full mt-2  flex items-center  justify-center text-center">
// //     <p>
// //       Already have an account?{" "}
// //       <NavLink to="/" className="text-blue-500 hover:underline">
// //         Log In
// //       </NavLink>
// //     </p>
// //   </div>
// // </div>
// // </div>

// }



// function hello(){
//     import React, { useState } from 'react';
// import { useDispatch } from 'react-redux';
// import { toast } from 'react-toastify';
// import { AsynSignUp } from '../Store/Actions/UserAction';
// import { Country, State, City } from "country-state-city";

// const Demo = () => {
//   const dispatch = useDispatch()
//   const [activeStep, setActiveStep] = useState(1); // Start with the "Your details" step active.

//   // Separate useState for each form field
//   // const [firstName, setFirstName] = useState('');
//   // const [lastName, setLastName] = useState('');
//   const [name , setName] = useState("")
//   const [email, setEmail] = useState('');
//   const [phone_number, setphone_number] = useState('');
//   const [languages_spoken, setLanguage] = useState('');
//   const [gender, setGender] = useState('');
//   const [travel_preferences, setTravelPreference] = useState('');
//   const [bio, setBio] = useState('');
//   const [date_of_birth, setdate_of_birth] = useState('');
//   const [country, setCountry] = useState('');
//   const [state, setState] = useState('');
//   const [city, setCity] = useState('');
//   const [username, setUsername] = useState("");
//   const [password, setPassword] = useState('');
  

//   // Error state for each field
//   const [errors, setErrors] = useState({});

  
//   const countries = Country.getAllCountries();
//   const states = State.getStatesOfCountry(country);
//   const cities = City.getCitiesOfState(country, state);

//   const handleStepClick = (step) => {
//     setActiveStep(step);
//   };

  

//   const validate = () => {
//     const validationErrors = {};


//    // Name validation
//     if (!name.trim()) {
//       validationErrors.name = "Name is required";
//     } else if (name.length < 3) {
//       validationErrors.name = "Name must be at least 3 characters";
//     } else if (!/^[A-Za-z]+(?: [A-Za-z]+)?$/.test(name)) {
//       validationErrors.name = "Name can only contain letters and one space between words";
//     }
    
   

//     // Email validation
//     if (!email.trim()) {
//       validationErrors.email = "Email is required";
//     } else if (!/\S+@\S+\.\S+/.test(email)) {
//       validationErrors.email = "Email is invalid";
//     }

//     // phone_number number validation

//     if (!phone_number.trim()) {
//         validationErrors.phone_number = "phone_number number is required";
//       } else if (!/^\+?1?\d{9,15}$/.test(phone_number)) {
//         validationErrors.phone_number = "phone_number number should be 10 digits";
//       }

   

//     // Step-specific validations
//     if (activeStep === 2) {
//       if (!gender) {
//         validationErrors.gender = "Gender is required";
//       }
//       if (!date_of_birth) {
//         validationErrors.date_of_birth = "Date of birth is required";
//       }
    
//     } else if (activeStep === 3) {
//       if (!country.trim()) {
//         validationErrors.country = "Country is required";
//       }
//       if (!state.trim()) {
//         validationErrors.state = "State is required";
//       }
//       if (!city.trim()) {
//         validationErrors.city = "City is required";
//       }
//     } else if (activeStep === 4) {

//         // Username validation
//     if (!username.trim()) {
//       validationErrors.username = "Username is required";
//     }else if (/\s/.test(username)) {
//       validationErrors.username = "Don't use spaces. Use @ and _ instead.";
//     }  else if (!/^[\w@._]+$/.test(username)) {
      
//       validationErrors.username = "Username can only contain letters, numbers, @, and _";
//     } else if (username.length < 3) {
//       validationErrors.username = "Username must be at least 8 characters long.";
//     }   
//     //   Password validation

//      if (!password.trim()) {
//       validationErrors.password = "Password is required";
//     } else if (password.length < 6) {
//       validationErrors.password = "Password must be at least 6 characters";
//     } else if (!/[0-9]/.test(password)) {
//       validationErrors.password = "Password must contain at least one number";
//     } else if (!/[A-Z]/.test(password)) {
//       validationErrors.password = "Password must contain at least one uppercase letter";
//     } else if (!/[a-z]/.test(password)) {
//       validationErrors.password = "Password must contain at least one lowercase letter";
//     } else if (!/[!@#$%^&*(),.?":{}|<>]/.test(password)) {
//       validationErrors.password = "Password must contain at least one special character";
//     }

//     }

//     return validationErrors;
//   };

//   const handleNextStep = () => {
  
//     const validationErrors = validate();
//     if (Object.keys(validationErrors).length === 0) {
//       setActiveStep(activeStep + 1);
//       setErrors({});
//     } else {
//       setErrors(validationErrors);
//       toast.error("Please fill in all required fields."); // Display toast notification
//     }
//   };
//   const today = new Date().toISOString().split("T")[0];

//   const OnFinish = (e)=>{
//     e.preventDefault();
//     const validationErrors = validate();
//     if (Object.keys(validationErrors).length > 0) {
//       setErrors(validationErrors);
//       return;
//     }
//     dispatch( AsynSignUp({
//   username,
// name,
//   email,
//   gender,
//   date_of_birth,
//   phone_number,
//   city,
//   state,
//   country,
//   password,
//   languages_spoken,
//   travel_preferences,
//   bio,
// }) );
// // console.log( );

//     // Clear form after submission
//     setUsername("");
// setName(""),
//     setEmail("");
//     setGender("");
//     setdate_of_birth("");
//     setphone_number("");
//     setCity("");
//     setState("");
//     setCountry("");
//     setPassword("");
//     setTravelPreference("");
//     setLanguage("");
//     setBio("");
//     setErrors({});
//   };
//   return (
//     <div className="flex h-screen">
//       {/* Sidebar */}
//       <div className="w-1/4 bg-blue-50 p-6 flex flex-col justify-start">
//         <div className="mb-8">
//           {/* Logo */}
//           <img src='/logo.png' alt="CoTravels Logo" className="w-[13vw] h-auto" />
//         </div>

//         <div className="space-y-6 pt-5">
//           {/* Steps */}
//           {[1, 2, 3, 4].map((step) => (
//             <div
//               key={step}
//               onClick={() => handleStepClick(step)}
//               className={`flex items-center space-x-4 cursor-pointer px-8`}
//             >
//               <div>
//                 <div className='flex gap-3 items-center'>
//                   <span className={`text-2xl font-[500] ${activeStep === step ? 'text-blue-600' : 'text-gray-400'}`}>
//                     <i className="ri-checkbox-circle-line"></i>
//                   </span>
//                   <h2 className="font-[600] text-[1.1vw] ">{step === 1 ? "Your details" :
//                     step === 2 ? "Personal Information" :
//                       step === 3 ? "Location" :
//                       "Account Security"}</h2>
//                 </div>
//                 <p className="text-gray-400 mt-1 ">{step === 1 ? "Please provide your name and contact" :
//                   step === 2 ? "Tell us more about yourself" :
//                     step === 3 ? "Share your location details" :
//                     "Set up your username and password"}</p>
//               </div>
//             </div>
//           ))}
//         </div>
//       </div>

//       {/* Form Content */}
//       <div className="w-3/4 flex flex-col items-center justify-center p-10">
//         <div className="w-full max-w-md">
//           {/* Form Title and Content based on active step */}
//           {activeStep === 1 && (
//             <div>
//               <div className="mb-5 flex flex-col items-center justify-center">
//                 <h2 className='text-2xl font-[500]'><i className="ri-file-list-2-line"></i></h2>
//                 <h1 className="text-xl font-bold text-gray-800">Your details</h1>
//                 <p className="text-gray-500">Please provide your name and contact</p>
//               </div>
//               <form>
//                 <div className="mb-4">
//                   <label htmlFor="name" className="block text-gray-700 font-medium"> name*</label>
//                   <input id="name" type="text" placeholder="Enter your first name" value={name}  onChange={(e) => setName(e.target.value)} className="mt-2 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" />
//                   {errors.name && <p className="text-red-600 text-sm">{errors.name}</p>}
//                 </div>
             
//                 <div className="mb-4">
//                   <label htmlFor="email" className="block text-gray-700 font-medium">Email*</label>
//                   <input id="email" type="email" placeholder="Enter your Email" value={email}  onChange={(e) => setEmail(e.target.value)} className="mt-2 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" />
//                   {errors.email && <p className="text-red-600 text-sm">{errors.email}</p>}
//                 </div>
//                 <div className="mb-4">
//                   <label htmlFor="phone_number" className="block text-gray-700 font-medium">phone_number </label>
//                   <input id="phone_number" type="tel" placeholder="Enter your phone_number number" value={phone_number}  onChange={(e) => setphone_number(e.target.value)} className="mt-2 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" />
//                   {errors.phone_number && <p className="text-red-600 text-sm">{errors.phone_number}</p>}
//                 </div>
//                 <div className="mb-6">
//   <label htmlFor="language" className="block text-gray-700 font-medium">Language spoken*</label>
//   <select
//     id="language"
//     value={languages_spoken}
//     onChange={(e) => setLanguage(e.target.value)}
//     className="mt-2 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
//   >
//     <option value="">Select your preferred language</option>
//     <option value="English">English</option>
//     <option value="Spanish">Spanish</option>
//     <option value="French">French</option>
//     <option value="German">German</option>
//     <option value="Hindi">Hindi</option>
//     <option value="Mandarin">Mandarin</option>
//     <option value="Arabic">Arabic</option>
//     <option value="Russian">Russian</option>
//     <option value="Portuguese">Portuguese</option>
//     <option value="Japanese">Japanese</option>
//     {/* Add more language options as needed */}
//   </select>
//   {errors.language && <p className="text-red-600 text-sm">{errors.language}</p>}
// </div>

//                 <button type="button" onClick={handleNextStep} className="w-full py-2 text-white bg-blue-500 rounded-md hover:bg-blue-600">Next</button>
//               </form>
//             </div>
//           )}
//           {activeStep === 2 && (
//             <div>
//               <div className="mb-5 flex flex-col items-center justify-center">
//                 <h2 className='text-2xl font-[500]'><i className="ri-file-user-line"></i></h2>
//                 <h1 className="text-xl font-bold text-gray-800">Personal Information</h1>
//                 <p className="text-gray-500">Tell us more about yourself</p>
//               </div>
//               <form>
//                 <div className="mb-4">
//                   <label htmlFor="gender" className="block text-gray-700 font-medium">Gender*</label>
//                   <select id="gender" value={gender}  onChange={(e) => setGender(e.target.value)} className="mt-2 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
//                     <option value="">Select Gender</option>
//                     <option value="male">Male</option>
//                     <option value="female">Female</option>
//                     <option value="other">other</option>
//                   </select>
//                   {errors.gender && <p className="text-red-600 text-sm">{errors.gender}</p>}
//                 </div>
//                 <div className="mb-4">
//                   <label htmlFor="date_of_birth" className="block text-gray-700 font-medium">Date of Birth*</label>
//                   <input id="date_of_birth"  max={today} type="date" value={date_of_birth}  onChange={(e) => setdate_of_birth(e.target.value)} className="mt-2 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" />
//                   {errors.date_of_birth && <p className="text-red-600 text-sm">{errors.date_of_birth}</p>}
//                 </div>
//                 <div className="mb-4">
//   <label htmlFor="travelPreference" className="block text-gray-700 font-medium">Travel Preference*</label>
//   <select
//     id="travelPreference"
//     value={ travel_preferences}
//     onChange={(e) => setTravelPreference(e.target.value)}
//     className="mt-2 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
//   >
//     <option value="">Select your travel preference</option>
//     <option value="Business Travel">Business Travel</option>
//     <option value="Leisure Travel">Leisure Travel</option>
//     <option value="Adventure Travel">Adventure Travel</option>
//     <option value="Solo Travel">Solo Travel</option>
//     <option value="Family Vacation">Family Vacation</option>
//     <option value="Group Travel">Group Travel</option>
//     <option value="Luxury Travel">Luxury Travel</option>
//     <option value="Budget Travel">Budget Travel</option>
//     <option value="Road Trip">Road Trip</option>
//     <option value="Cruise">Cruise</option>
//     {/* Add more travel preferences if needed */}
//   </select>
//   {errors.travelPreference && <p className="text-red-600 text-sm">{errors.travelPreference}</p>}
// </div>

//                 <div className="mb-4">
//                   <label htmlFor="bio" className="block text-gray-700 font-medium">Bio*</label>
//                   <textarea id="bio" placeholder="Tell us about yourself" value={bio}  onChange={(e) => setBio(e.target.value)} className="mt-2 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" />
//                   {errors.bio && <p className="text-red-600 text-sm">{errors.bio}</p>}
//                 </div>
//                 <button type="button" onClick={handleNextStep} className="w-full py-2 text-white bg-blue-500 rounded-md hover:bg-blue-600">Next</button>
//               </form>
//             </div>
//           )}
//           {activeStep === 3 && (
//             <div>
//               <div className="mb-5 flex flex-col items-center justify-center">
//                 <h2 className='text-2xl font-[500]'><i className="ri-map-pin-line"></i></h2>
//                 <h1 className="text-xl font-bold text-gray-800">Location</h1>
//                 <p className="text-gray-500">Share your location details</p>
//               </div>
//               <form>
//               <div className="mb-4">
//   <label htmlFor="country" className="block text-gray-700 font-medium">Country*</label>
//   <select
//     id="country"
//     value={country}
//     onChange={(e) => setCountry(e.target.value)}
//     className="mt-2 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
//   >
//    <option value="">Select Country</option>
//               {countries.map((country) => (
//                 <option key={country.isoCode} value={country.isoCode}>
//                   {country.name}
//                 </option>
//               ))}
//   </select>
//   {errors.country && <p className="text-red-600 text-sm">{errors.country}</p>}
// </div>

// <div className="mb-4">
//   <label htmlFor="state" className="block text-gray-700 font-medium">State*</label>
//   <select 
//   disabled={!country}
//     id="state"
//     value={state}
//     onChange={(e) => setState(e.target.value)}
//     className="mt-2 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
//   >
//      <option value="">Select State</option>
//               {states.map((state) => (
//                 <option key={state.isoCode} value={state.isoCode}>
//                   {state.name}
//                 </option>
//               ))}
//   </select>
//   {errors.state && <p className="text-red-600 text-sm">{errors.state}</p>}
// </div>

// <div className="mb-4">
//   <label htmlFor="city" className="block text-gray-700 font-medium">City*</label>
//   <select
//     id="city"
//     disabled={!state}
//     value={city}
//     onChange={(e) => setCity(e.target.value)}
//     className="mt-2 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
//   >
//     <option value="">Select City</option>
//               {cities.map((city) => (
//                 <option key={city.id} value={city.name}>
//                   {city.name}
//                 </option>
//               ))}
//   </select>
//   {errors.city && <p className="text-red-600 text-sm">{errors.city}</p>}
// </div>

//                 <button type="button" onClick={handleNextStep} className="w-full py-2 text-white bg-blue-500 rounded-md hover:bg-blue-600">Next</button>
//               </form>
//             </div>
//           )}
//           {activeStep === 4 && (
//             <div>
//               <div className="mb-5 flex flex-col items-center justify-center">
//                 <h2 className='text-2xl font-[500]'><i className="ri-lock-line"></i></h2>
//                 <h1 className="text-xl font-bold text-gray-800">Account Security</h1>
//                 <p className="text-gray-500">Set up your username and password</p>
//               </div>
//               <form>
//               <div className="mb-4">
//               <label htmlFor="username" className="block text-gray-700 font-medium">
//                 Username*
//               </label>
//               <input
//                 id="username"
//                 type="text"
//                 value={username}
//                 onChange={(e) => setUsername(e.target.value)}
//                 placeholder="Enter your username"
//                 className="mt-2 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
//               />
//                {errors.username && <p className="text-red-600 text-sm">{errors.username}</p>}
//             </div>
//                 <div className="mb-4">
//                   <label htmlFor="password" className="block text-gray-700 font-medium">Password*</label>
//                   <input id="password" type="password" placeholder="Enter your password" value={password}  onChange={(e) => setPassword(e.target.value)} className="mt-2 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" />
//                   {errors.password && <p className="text-red-600 text-sm">{errors.password}</p>}
//                   {errors.passwordMismatch && <p className="text-red-600 text-sm">{errors.passwordMismatch}</p>}
//                 </div>
               
//                 <button type="button" onClick={OnFinish} className="w-full py-2 text-white bg-blue-500 rounded-md hover:bg-blue-600">Finish</button>
//               </form>
//             </div>
//           )}
//         </div>
//       </div>
//     </div>
//   );
// }

// export default Demo;

// }